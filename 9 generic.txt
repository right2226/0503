
class classp1 {
	  public static void main(String[] args) {

	    // initialize generic class
	    // with Integer data
	    GenericsClass<Integer> intObj = new GenericsClass<Integer>(5);
	    System.out.println("Generic Class returns: " + intObj.getData());

	    // initialize generic class
	    // with String data
	    GenericsClass<String> stringObj = new GenericsClass<String>("Java Programming");
	    System.out.println("Generic Class returns: " + stringObj.getData());
	  }
	}

	// create a generics class
	class GenericsClass<T> {

	  // variable of T type
	  private T data;

	  public GenericsClass(T data) {
	    this.data = data;
	  }

	  // method that return T type variable
	  public T getData() {
	    return this.data;
	  }
	}


2



public class methodp1 {
    // Generic method to compare two objects
    public static <T extends Comparable<T>> T findMax(T x, T y) {
        return x.compareTo(y) > 0 ? x : y;
    }

    public static void main(String[] args) {
        // Using generic method to find maximum of two integers
        Integer maxInt = findMax(5, 10);
        System.out.println("Maximum of 5 and 10 is: " + maxInt);

        // Using generic method to find maximum of two doubles
        Double maxDouble = findMax(3.5, 7.8);
        System.out.println("Maximum of 3.5 and 7.8 is: " + maxDouble);

        // Using generic method to find maximum of two strings
        String maxString = findMax("apple", "banana");
        System.out.println("Maximum of 'apple' and 'banana' is: " + maxString);
    }
}

